const user = qnext.getValue('user');


const splitterIcon = 'üî∏';
const delIcon = 'üóë';
const delLink = 't.me/MestoInfoBot?start=delmess$chatId_$messageId';
async function run() {
  const db = await qnext.database.system();
  const messages = await db.collection('SavedMessages').find({
    userId: user.id,
  }).toArray();
  exports.messagesResult = messages;
  if (!messages.length) {
    exports.messages = '–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É !save –≤ —á–∞—Ç–µ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ';
    return;
  }
  const textLines = messages.map(data => {
    const date = qnext.date.toLocal(data.ctime);
    let text = qnext.date.format(date, 'yyyy.mm.dd')+splitterIcon+(data.text||'');
    //
    const delUrl = delLink.replace('$chatId', data.chatId).replace('$messageId', data.messageId);
    return text +' ' + qnext.html.link('–û—Ç–∫—Ä—ã—Ç—å', data.link) + '  '+qnext.html.link(delIcon+'–£–¥–∞–ª–∏—Ç—å', delUrl);
  })
  exports.messages = textLines.join('\n\n')
}

run().finally(qnext.onFinish);
// LoadMessages
