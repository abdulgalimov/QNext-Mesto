
const {user, formResult} = qnext.data;
const {type, housing, psychological, documents, humanitarian, medical, transport, tg, contacts} = formResult.values;
const {italic} = qnext.html;

const info = {
  housing: {
    key: '–° –∂–∏–ª—å–µ–º',
    tag: '#–∂–∏–ª—å–µ'
  },
  psychological: {
    key: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å',
    tag: '#–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è_–ø–æ–º–æ—â—å'
  },
  documents: {
    key: '–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å',
    tag: '#–¥–æ–∫—É–º–µ–Ω—Ç—ã #—é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è_–ø–æ–º–æ—â—å'
  },
  humanitarian: {
    key: '–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å',
    tag: '#–≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è_–ø–æ–º–æ—â—å'
  },
  medical: {
    key: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å',
    tag: '#–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è_–ø–æ–º–æ—â—å'
  },
  transport: {
    key: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å',
    tag: '#—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è_–ø–æ–º–æ—â—å'
  },
  contacts: {
    key: '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
  }
};

let message;
let splitter;
let tags = [];
switch (type) {
  case '–ú–æ–≥—É –ø–æ–º–æ—á—å':
    message = `üíô –ú–æ–≥—É –ø–æ–º–æ—á—å.`;
    splitter = 'üîµ';
    break;
  case '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å':
    message = `‚ù§Ô∏è –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å.`;
    splitter = 'üî¥';
    break;
}

function addLine(type) {
  const typeData = info[type];
  const {key, tag} = typeData;
  const value = formResult.values[type];
  if (!value) return;
  message += `\n${splitter}${italic(key)}: ${value}`;
  if (tag) tags.push(tag);
}
addLine('housing');
addLine('psychological');
addLine('documents');
addLine('humanitarian');
addLine('medical');
addLine('transport');
addLine('contacts');

if (tg === '–î–∞') {
  message = `${message}
${qnext.urls.user(user)}`
}

if (tags.length) {
  message = `${message}

${tags.join(' ')}`
}


exports.message = message;
