
const {user, formResult} = qnext.data;
const {type, housing, psychological, documents, humanitarian, medical, transport, tg, contacts} = formResult.values;
const {italic} = qnext.html;

let message;
switch (type) {
  case '–ú–æ–≥—É –ø–æ–º–æ—á—å':
    buildCanHelp();
    break;
  case '–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å':
    buildNeedHelp();
    break;
}

function addLine(key, value) {
  if (!value) return;
  message += `\n${italic(key)}: ${value}`;
}
function buildCanHelp() {
  message = `üíô –ú–æ–≥—É –ø–æ–º–æ—á—å.`;
  addLine('–° –∂–∏–ª—å–µ–º', housing);
  addLine('–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å', psychological);
  addLine('–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å', documents);
  addLine('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å', humanitarian);
  addLine('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å', medical);
  addLine('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å', transport);
  addLine('–ö–æ–Ω—Ç–∞–∫—Ç—ã', contacts);
}

function buildNeedHelp() {
  message = `‚ù§Ô∏è –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å.`;
  addLine('–° –∂–∏–ª—å–µ–º', housing);
  addLine('–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å', psychological);
  addLine('–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å', documents);
  addLine('–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å', humanitarian);
  addLine('–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å', medical);
  addLine('–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–∞—è –ø–æ–º–æ—â—å', transport);
  addLine('–ö–æ–Ω—Ç–∞–∫—Ç—ã', contacts);
}

if (tg === '–î–∞') {
  message = `${message}
${qnext.urls.user(user)}`
}


exports.message = message;
